{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n  <flash-messages></flash-messages>\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes} from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ProfileComponent } from './components/profile/profile.component';\n\n//Custom Services\nimport { ValidateService } from './services/validate.service';\nimport { AuthService } from './services/auth.service';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n\n\nconst appRoutes:Routes = [\n  { path : '', component: HomeComponent },\n  { path : 'login', component: LoginComponent },\n  { path : 'register', component: RegisterComponent },\n  { path : 'dashboard', component: DashboardComponent },\n  { path : 'profile', component: ProfileComponent }\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    DashboardComponent,\n    HomeComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    RouterModule.forRoot(appRoutes),\n    FlashMessagesModule\n  ],\n  providers: [ValidateService, FlashMessagesService, AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  dashboard works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"jumbotron text-center\\\">\\n  <h1>MEAN Authentication App</h1>\\n  <p class=\\\"lead\\\">\\n    Welcome to MEAN stack app which buit form scratch.\\n  </p>\\n  <div >\\n    <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/register']\\\"> Register </a> <a class=\\\"btn btn-secondary\\\" [routerLink]=\\\"['/login']\\\"> Login </a>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-4\\\">\\n    <h3>Express Backend</h3>\\n    <p> This app is use express js as backend.</p>\\n  </div>\\n  <div class=\\\"col-md-4\\\">\\n    <h1>Angular Cli project</h1>\\n    <p>This project fornt end generated using angular cli </p>\\n  </div>\\n  <div class=\\\"col-md-4\\\">\\n    <h1>Jwt Auth</h1>\\n    <p> User Jwt for Authentication</p>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-4\\\">\\n    <h3>Joi</h3>\\n    <p>Used for payload validatio</p>\\n  </div>\\n  <div class=\\\"col-md-4\\\">\\n    <h1>Passport</h1>\\n    <p>Passport to Authenticate request</p>\\n  </div>\\n  <div class=\\\"col-md-4\\\">\\n    <h1>Winston</h1>\\n    <p>Used Winston for logging</p>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  login works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">MEAN(A6) AUTH APP</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\".dual-collapse\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"navbar-collapse collapse dual-collapse\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/']\\\" >Home <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"navbar-collapse collapse dual-collapse\\\">\\n    <ul class=\\\"navbar-nav ml-auto\\\">\\n      <li class=\\\"nav-item\\\"  [routerLinkActive]=\\\"['active']\\\">\\n          <a class=\\\"nav-link\\\"  [routerLink]=\\\"['/register']\\\">Register</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\">\\n          <a class=\\\"nav-link\\\"  [routerLink]=\\\"['/login']\\\">Login</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  profile works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12 mx-auto\\\">\\n    <div class=\\\"card border-secondary\\\">\\n      <div class=\\\"card-header\\\">\\n        <h3 class=\\\"text-center\\\">Sign Up</h3>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <form class=\\\"form\\\" role=\\\"form\\\" autocomplete=\\\"off\\\" (submit)=\\\"onRgisterSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Name</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"full name\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>User Name</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\"  placeholder=\\\"user name\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Email</label>\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"email@gmail.com\\\" required=\\\"\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Password</label>\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\"  placeholder=\\\"password\\\" title=\\\"At least 6 characters with letters and numbers\\\" required=\\\"\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success btn-lg float-right\\\">Register</button>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<!--/row-->\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { ValidateService } from './../../services/validate.service';\nimport { AuthService } from './../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name: String;\n  username: String;\n  email: String;\n  password: String;\n  constructor(private validateService: ValidateService,\n    private flashMessage: FlashMessagesService,\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n  }\n  //Register submit\n  onRgisterSubmit() {\n    const user = {\n      name: this.name,\n      username: this.username,\n      email: this.email,\n      password: this.password\n    }\n\n    // validate user object\n    if( !this.validateService.ValidateRegister(user)) {\n      this.flashMessage.show('Please fill all fields', { cssClass:'alert alert-danger alert-dismissible fade show', timeout: 3000 });\n      return false;\n    }\n\n    // Validate Email\n    if(!this.validateService.ValidateEmail(user.email)) {\n        this.flashMessage.show('Email should be a valid email',{ cssClass:'alert alert-danger alert-dismissible fade show', timeout: 3000 })\n      return false;\n    }\n\n    // Register user\n    this.authService.RegisterUser(user).subscribe(data => {\n      if(data.success) {\n        this.flashMessage.show(data.message,{ cssClass:'alert alert-success', timeout: 3000 });\n        this.router.navigate(['/login']);\n      } else {\n        this.flashMessage.show(data.message,{ cssClass:'alert alert-danger', timeout: 3000 });\n        this.router.navigate(['/register']);\n      }\n    })\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {Http, Headers} from '@angular/http'\nimport 'rxjs/Rx';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n  user : any;\n  constructor(private http: Http) { }\n\n  // Register AuthService\n  RegisterUser(user) {\n    console.log('')\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/api/v1/users/register', user, { headers: headers }).map(res => res.json());\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  // Validate Register User\n  ValidateRegister(user) {\n    if (user.name === undefined || user.username === undefined || user.email === undefined || user.password === undefined ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  ValidateEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}